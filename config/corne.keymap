/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,matrix-transform = &five_column_transform; };
};

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt ESC Q  &kp W  &kp F  &kp R                 &kp P             &kp G                  &kp J                    &kp L  &kp U          &mt DEL Y               &kp A  &kp R
&kp S      &kp T  &kp D  &kp H                 &kp N             &kp E                  &kp I                    &kp O  &kp Z          &kp X                   &kp C  &kp V
&kp B      &kp K  &kp M  &mt SEMICOLON PERIOD  &mt COLON PERIOD  &mt BACKSLASH SLASH    &mt LEFT_SHIFT LEFT_WIN  &mo 1  &mt TAB SPACE  &mt LEFT_CONTROL ENTER  &mo 2  &mt LEFT_ALT BACKSPACE
            >;
        };

        left {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp N1                 &kp N2                          &kp N3                      &kp N4       &kp N5              &kp N6       &kp N7  &kp N8    &kp N9       &kp N0          &mt QUESTION EXCLAMATION    &mt DOLLAR AMPERSAND
&mt DOUBLE_QUOTES SQT  &mt RIGHT_BRACKET LEFT_BRACKET  &mt PERCENT HASH            &trans       &kp LEFT            &kp RIGHT    &kp UP  &kp DOWN  &bootloader  &mt PIPE TILDE  &mt GREATER_THAN LESS_THAN  &mt MINUS PLUS
&mt UNDERSCORE EQUAL   &kp INSERT                      &mt RIGHT_BRACE LEFT_BRACE  &kp AT_SIGN  &mt CARET ASTERISK  &trans       &trans  &trans    &trans       &trans          &trans                      &trans
            >;
        };

        right {
            bindings = <
&trans  &trans  &trans  &trans  &trans        &trans         &kp C_PLAY_PAUSE       &mt C_PREV C_NEXT      &trans  &kp C_MUTE  &trans  &trans
&trans  &trans  &trans  &trans  &kp CAPSLOCK  &kp HOME       &mt PAGE_DOWN PAGE_UP  &mt C_VOL_DN C_VOL_UP  &trans  &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans        &bootloader    &trans                 &trans                 &trans  &trans      &trans  &trans
            >;
        };

        cond {
            bindings = <
&mt F2 F1     &mt F4 F3     &mt F6 F5     &kp F4  &kp F5  &kp F6     &kp F7  &kp F8   &kp F9      &kp F10         &bt BT_SEL 0  &bt BT_SEL 1
&bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &to 0   &to 4   &trans     &trans  &kp F11  &bt BT_CLR  &bt BT_CLR_ALL  &trans        &trans
&bootloader   &bootloader   &trans        &trans  &trans  &kp F12    &trans  &trans   &trans      &trans          &trans        &trans
            >;
        };

        gta_layer {
            bindings = <
&kp ESC  &kp Q   &kp W   &kp E   &kp R            &trans       &trans     &kp KP_N2  &trans     &trans     &kp LSHFT  &kp A
&kp S    &kp D   &kp F   &trans  &kp KP_NUMBER_4  &kp KP_N5    &kp KP_N6  &trans     &kp LCTRL  &kp Y      &kp X      &kp C
&kp G    &trans  &trans  &trans  &trans           &trans       &trans     &mo 0      &trans     &mkp LCLK  &mo 3      &mkp RCLK
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Cond {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
